---
- name: Add apiserver role
  uri:
    method: POST
    validate_certs: no
    headers:
      X-Vault-Token: "{{ sys_init_result['root_token'] }}"
    url: https://Vault:8200/v1/pki_int/roles/apiserver.kubernetes.ipool.me
    body_format: json
    status_code: 204
    body:
      allowed_domains: apiserver.kubernetes.ipool.me
      allow_any_name: true
      allow_subdomains: yes
      max_ttl: 2400h

# Generate kubernetes apiserver certificate
- name: Generate kubernetes apiserver certificate
  uri:
    method: POST
    validate_certs: no
    headers:
      X-Vault-Token: "{{ sys_init_result['root_token'] }}"
    url: https://Vault:8200/v1/pki_int/issue/apiserver.kubernetes.ipool.me
    body_format: json
    status_code: 200
    body:
      key_usage: ["DigitalSignature", "KeyEncipherment"]
      ext_key_usage: ["ExtKeyUsageServerAuth"]
      common_name: apiserver.kubernetes.ipool.me
      alt_names: "kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster.local"
      ip_sans: "10.96.0.1,{{ ansible_facts.enp0s8.ipv4.address }}"
      max_ttl: 2400h
  register: apiserver_certificate

- name: Persistent apiserver certificate
  become: no
  local_action:
    module: copy
    content: "{{ apiserver_certificate.json.data.certificate }}"
    dest: ./roles/kubernetes/server/gencert/files/apiserver.crt
    mode: 0644

- name: Persistent apiserver key
  become: no
  local_action:
    module: copy
    content: "{{ apiserver_certificate.json.data.private_key }}"
    dest: ./roles/kubernetes/server/gencert/files/apiserver.key
    mode: 0644
