- name: Create kubernetes directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /root/.kube
    - /opt/kubernetes/tls
    - /opt/etcd/tls
    - /etc/kubernetes
    - /tmp/kubernetes
    - /etc/systemd/system/kube-apiserver.service.d
    - /etc/systemd/system/kube-controller-manager.service.d
    - /etc/systemd/system/kube-scheduler.service.d

- name: Extract kubernetes package
  unarchive:
    src: "{{ KUBERNETES_SERVER_PACKAGE }}"
    dest: /tmp/kubernetes
    creates: /tmp/kubernetes/server
    extra_opts: [ "--strip-components=1" ]

- name: Install kubernetes components
  copy:
    remote_src: yes
    src: "/tmp/kubernetes/server/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl
  notify: Restart kubernetes server service

- name: Add kubernetes systemd service
  copy:
    src: "{{ item }}"
    dest: "/lib/systemd/system/{{ item }}"
    mode: 0644
  with_items:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
  notify: Restart kubernetes server service

- name: Add kubernetes server service configuration
  template:
    src: "{{ item.src }}"
    dest: "/etc/systemd/system/kube-{{ item.dest }}.service.d/10-{{ item.dest }}.conf"
    mode: 0644
  with_items:
    - { src: apiserver.service.j2, dest: apiserver }
    - { src: controller-manager.service.j2, dest: controller-manager }
    - { src: scheduler.service.j2, dest: scheduler }
  notify: Restart kubernetes server service

- name: Add kubernetes conf file
  template:
    src: "{{ item.src }}"
    dest: "/etc/kubernetes/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: apiserver.service.j2, dest: apiserver.service }
    - { src: controller-manager.conf.j2, dest: controller-manager.conf }
    - { src: scheduler.conf.j2, dest: scheduler.conf }
    - { src: admin.conf.j2, dest: admin.conf }
  notify: Restart kubernetes server service

- name: Copy kubernetes certificate
  copy:
    src: "./roles/kubernetes/server/prepare/files/{{ item }}"
    dest: "/opt/kubernetes/tls/{{ item }}"
    mode: 0644
  with_items:
    - apiserver.crt
    - apiserver.key
    - apiserver-etcd-client.crt
    - apiserver-etcd-client.key
    - apiserver-kubelet-client.crt
    - apiserver-kubelet-client.key
    - front-proxy-ca.crt
    - front-proxy-ca.key
    - front-proxy-client.crt
    - front-proxy-client.key
    - sa.key
    - sa.pub
  notify: Restart kubernetes server service

- name: Copy CA certificate
  copy:
    src: "./roles/vault/config/files/{{ item.src }}"
    dest: "/opt/kubernetes/tls/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: vault_int_ca.crt, dest: ca.crt }
    - { src: vault_int_ca.key, dest: ca.key }
  notify: Restart kubernetes server service

- name: Copy etcd CA certificate
  copy:
    src: ./roles/vault/config/files/vault_int_ca.crt
    dest: /opt/etcd/tls/ca.crt
    mode: 0644
  notify: Restart kubernetes server service

- name: Copy kubectl config
  copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    mode: 0644

- name: Add kubectl complete for bash
  lineinfile:
    dest: /root/.bashrc
    line: source /usr/share/bash-completion/bash_completion && source <(kubectl completion bash)
    state: present
