---
- name: Extract kubernetes package
  unarchive:
    src: "{{ KUBERNETES_NODE_PACKAGE }}"
    dest: /tmp/kubernetes
    creates: /tmp/kubernetes/node
    extra_opts: [ "--strip-components=1" ]

- name: Install kubelet and kube-proxy components
  copy:
    src: "/tmp/kubernetes/node/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: yes
    mode: 0755
  with_items:
    - kubelet
    - kube-proxy

- name: Add kubelet and kube-proxy systemd service
  copy:
    src: "{{ item }}/{{ item }}.service"
    dest: "/lib/systemd/system/{{ item }}.service"
    mode: 0644
  with_items:
    - kubelet
    - kube-proxy

- name: Add kubelet and kube-proxy systemd service conf
  template:
    src: "{{ item }}/{{ item }}.service"
    dest: "/etc/systemd/system/{{ item }}.service.d/10-{{ item }}.conf"
    mode: 0644
  with_items:
    - kubelet
    - kube-proxy

- name: Copy kubelet config file
  template:
    src: "kubelet/{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: config.yaml, dest: /var/lib/kubelet/config.yaml }
    - { src: flags.env, dest: /var/lib/kubelet/kubeadm-flags.env}
    - { src: bootstrap-kubelet.conf, dest: /etc/kubernetes/bootstrap-kubelet.conf}

- name: Copy bootstrap kubelet kubeconfig
  copy:
    src: ./roles/kubernetes/server/gentoken/files/bootstrap-kubeconfig.yml
    dest: /etc/kubernetes/bootstrap-kubelet.conf

- name: Pull Pause docker image
  docker_image:
    name: "registry.aliyuncs.com/google_containers/pause:{{ PAUSE_VERSION }}"
    repository: "k8s.gcr.io/pause:{{ PAUSE_VERSION }}"
    source: pull

- name: Create kubelet work directory
  file:
    path: /var/lib/kubelet
    state: directory
    mode: 0755

- name: Create kubernetes pki directory
  file:
    path: /var/run/kubernetes
    state: directory

- name: Copy ca certificate
  copy:
    src: ./roles/vault/config/files/ca.crt
    dest: /opt/kubernetes/tls/ca.crt
    mode: 0644
