---
- name: Create directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/kubernetes/package
    - /opt/cni/package
    - /opt/cni/bin
    - /opt/kubernetes/tls
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /etc/kubernetes/manifests
    - /etc/systemd/system/kubelet.service.d
    - /etc/systemd/system/kube-proxy.service.d

- name: Extract kubernetes package
  unarchive:
    src: "{{ KUBERNETES_NODE_PACKAGE }}"
    dest: /opt/kubernetes/package
    creates: /opt/kubernetes/package/node
    extra_opts: [ "--strip-components=1" ]

- name: Install kubelet and kube-proxy
  copy:
    src: "/opt/kubernetes/package/node/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: yes
    mode: 0755
  with_items:
    - kubelet
    - kube-proxy

- name: Add kubernetes node service
  copy:
    src: "{{ item }}"
    dest: "/lib/systemd/system/{{ item }}"
    mode: 0644
  with_items:
    - kubelet.service
    - kube-proxy.service

- name: Add kubernetes node service configuration
  template:
    src: "{{ item.src }}"
    dest: "/etc/systemd/system/{{ item.dest }}.service.d/10-{{ item.dest }}.conf"
    mode: 0644
  with_items:
    - { src: kubelet.service.j2 , dest: kubelet }
    - { src: kube-proxy.service.j2 , dest: kube-proxy }

- name: Copy kubelet config file
  template:
    src: "{{ item.src }}"
    dest: "/var/lib/kubelet/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: config.yaml.j2, dest: config.yaml }
    - { src: flags.env.j2, dest: kubeadm-flags.env }

- name: Copy kube-proxy config file
  template:
    src: "{{ item.src }}"
    dest: "/var/lib/kube-proxy/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: config.conf.j2, dest: config.conf }
    - { src: kubeconfig.conf.j2, dest: kubeconfig.conf }

- name: Copy bootstrap-kubelet.conf
  copy:
    src: ./roles/kubernetes/server/config/files/bootstrap-kubelet.yaml
    dest: /etc/kubernetes/bootstrap-kubelet.conf

- name: Copy ca certificate
  copy:
    src: ./roles/vault/config/files/vault_int_ca.crt
    dest: /opt/kubernetes/tls/ca.crt

- name: Pull Pause docker image
  docker_image:
    name: "registry.aliyuncs.com/google_containers/pause:{{ PAUSE_VERSION }}"
    repository: "k8s.gcr.io/pause:{{ PAUSE_VERSION }}"
    source: pull

- include_tasks: cni.yaml

- name: Enable and restart kubelet and kube-proxy service
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items:
    - kube-proxy
    - kubelet

