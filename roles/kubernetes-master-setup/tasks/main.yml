#- name: Extract kubernetes package
#  unarchive:
#    src: "https://cdn.radix10.cn/kubernetes-server-linux-amd64.tar.gz"
#    src: "/home/radix10/desktop/my-server-playbook/roles/kubernetes/templates/kubernetes-server-linux-amd64.tar.gz"
#    dest: /tmp
#    creates: /tmp/kubernetes
#    remote_src: yes

- name: Create kubernetes directory
  file:
    path: '/tmp/kubernetes'
    state: directory

- name: Extract kubernetes package
  unarchive:
    src: '/home/radix10/desktop/my-server-playbook/roles/kubernetes/templates/kubernetes-server-linux-amd64.tar.gz'
    dest: '/tmp/kubernetes'
    creates: '/tmp/kubernetes/server'
    extra_opts: [--strip-components=1]


- name: Install Kubernetes components
  copy:
    src: "/tmp/kubernetes/server/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: true
    mode: '0755'
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler


- name: Add kubernetes systemd service
  copy: 
    src: "{{ item }}"
    dest: "/usr/lib/systemd/system/{{ item }}"
    mode: '0644'
  with_items:
  - kube-apiserver.service
  - kube-controller-manager.service
  - kube-scheduler.service


- name: Create kubernetes config directory
  file:
    path: '/etc/kubernetes'
    state: directory
    mode: '0755'

- name: Add kubernetes apiserver environment file
  copy: 
    src: "{{ item }}"
    dest: "/etc/kubernetes/{{ item }}"
    mode: '0644'
  with_items:
  - kubeconfig
  - apiserver
  - controller-manager
  - scheduler


- name: Systemd daemon reload
  systemd:
    daemon_reload: true

- name: Enable and start kubernetes apiserver service
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
  - kube-controller-manager
  - kube-scheduler
  - kube-apiserver
